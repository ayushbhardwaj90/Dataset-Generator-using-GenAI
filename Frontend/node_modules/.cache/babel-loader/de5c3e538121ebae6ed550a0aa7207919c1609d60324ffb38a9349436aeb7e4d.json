{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000';\nconst api = axios.create({\n  baseURL: API_URL\n});\nconst getDomains = () => api.get('/domains');\nconst registerUser = user => api.post('/register', user);\nconst loginUser = (username, password) => {\n  const data = new FormData();\n  data.append('username', username);\n  data.append('password', password);\n  return api.post('/token', data);\n};\nconst getCurrentUser = token => {\n  return api.get('/me', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nconst generateDataset = (generationRequest, token) => {\n  return api.post('/generate', generationRequest, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// New function to call the fallback generation endpoint\nconst generateFallbackData = (domain, rows, token) => {\n  const requestPayload = {\n    domain: domain,\n    rows: rows,\n    custom_prompt: \"Fallback generation due to API unavailability.\"\n  };\n  return api.post('/generate/fallback', requestPayload, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nconst getHistory = token => {\n  return api.get('/history', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nconst logoutUser = () => {\n  // For JWT, simply clearing the token from local storage is sufficient\n  localStorage.removeItem('token');\n};\nconst requestPasswordReset = email => {\n  return api.post('/forgot-password', {\n    email\n  });\n};\nconst resetPassword = (token, newPassword) => {\n  return api.post('/reset-password', {\n    token,\n    new_password: newPassword\n  });\n};\nexport { generateDataset, generateFallbackData, getCurrentUser, getDomains, getHistory, loginUser, logoutUser, registerUser, requestPasswordReset, resetPassword };","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","getDomains","get","registerUser","user","post","loginUser","username","password","data","FormData","append","getCurrentUser","token","headers","generateDataset","generationRequest","generateFallbackData","domain","rows","requestPayload","custom_prompt","getHistory","logoutUser","localStorage","removeItem","requestPasswordReset","email","resetPassword","newPassword","new_password"],"sources":["C:/Synthetic dataset generator/Frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000';\n\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\nconst getDomains = () => api.get('/domains');\n\nconst registerUser = (user) => api.post('/register', user);\n\nconst loginUser = (username, password) => {\n    const data = new FormData();\n    data.append('username', username);\n    data.append('password', password);\n    return api.post('/token', data);\n};\n\nconst getCurrentUser = (token) => {\n    return api.get('/me', {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n};\n\nconst generateDataset = (generationRequest, token) => {\n    return api.post('/generate', generationRequest, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n};\n\n// New function to call the fallback generation endpoint\nconst generateFallbackData = (domain, rows, token) => {\n    const requestPayload = {\n        domain: domain,\n        rows: rows,\n        custom_prompt: \"Fallback generation due to API unavailability.\"\n    };\n    return api.post('/generate/fallback', requestPayload, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n};\n\nconst getHistory = (token) => {\n    return api.get('/history', {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n};\n\nconst logoutUser = () => {\n    // For JWT, simply clearing the token from local storage is sufficient\n    localStorage.removeItem('token');\n};\n\nconst requestPasswordReset = (email) => {\n    return api.post('/forgot-password', { email });\n};\n\nconst resetPassword = (token, newPassword) => {\n    return api.post('/reset-password', { token, new_password: newPassword });\n};\n\nexport {\n  generateDataset,\n  generateFallbackData, getCurrentUser, getDomains, getHistory, loginUser, logoutUser, registerUser, requestPasswordReset,\n  resetPassword\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEF,MAAMI,UAAU,GAAGA,CAAA,KAAMH,GAAG,CAACI,GAAG,CAAC,UAAU,CAAC;AAE5C,MAAMC,YAAY,GAAIC,IAAI,IAAKN,GAAG,CAACO,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AAE1D,MAAME,SAAS,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACtC,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EACjCE,IAAI,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;EACjC,OAAOV,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAEI,IAAI,CAAC;AACnC,CAAC;AAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;EAC9B,OAAOf,GAAG,CAACI,GAAG,CAAC,KAAK,EAAE;IAClBY,OAAO,EAAE;MACL,eAAe,EAAE,UAAUD,KAAK;IACpC;EACJ,CAAC,CAAC;AACN,CAAC;AAED,MAAME,eAAe,GAAGA,CAACC,iBAAiB,EAAEH,KAAK,KAAK;EAClD,OAAOf,GAAG,CAACO,IAAI,CAAC,WAAW,EAAEW,iBAAiB,EAAE;IAC5CF,OAAO,EAAE;MACL,eAAe,EAAE,UAAUD,KAAK;IACpC;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA,MAAMI,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEN,KAAK,KAAK;EAClD,MAAMO,cAAc,GAAG;IACnBF,MAAM,EAAEA,MAAM;IACdC,IAAI,EAAEA,IAAI;IACVE,aAAa,EAAE;EACnB,CAAC;EACD,OAAOvB,GAAG,CAACO,IAAI,CAAC,oBAAoB,EAAEe,cAAc,EAAE;IAClDN,OAAO,EAAE;MACL,eAAe,EAAE,UAAUD,KAAK;IACpC;EACJ,CAAC,CAAC;AACN,CAAC;AAED,MAAMS,UAAU,GAAIT,KAAK,IAAK;EAC1B,OAAOf,GAAG,CAACI,GAAG,CAAC,UAAU,EAAE;IACvBY,OAAO,EAAE;MACL,eAAe,EAAE,UAAUD,KAAK;IACpC;EACJ,CAAC,CAAC;AACN,CAAC;AAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;EACrB;EACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;AACpC,CAAC;AAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACpC,OAAO7B,GAAG,CAACO,IAAI,CAAC,kBAAkB,EAAE;IAAEsB;EAAM,CAAC,CAAC;AAClD,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACf,KAAK,EAAEgB,WAAW,KAAK;EAC1C,OAAO/B,GAAG,CAACO,IAAI,CAAC,iBAAiB,EAAE;IAAEQ,KAAK;IAAEiB,YAAY,EAAED;EAAY,CAAC,CAAC;AAC5E,CAAC;AAED,SACEd,eAAe,EACfE,oBAAoB,EAAEL,cAAc,EAAEX,UAAU,EAAEqB,UAAU,EAAEhB,SAAS,EAAEiB,UAAU,EAAEpB,YAAY,EAAEuB,oBAAoB,EACvHE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}